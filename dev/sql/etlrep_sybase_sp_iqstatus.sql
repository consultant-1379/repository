--
-- sp_iqstatus - function for ASA to appear like IQ for the purpose of ENIQ monitoring console
--
--

if (object_id('dbo.sp_iqstatus') is not null) then   drop procedure dbo.sp_iqstatus ;   if (object_id('dbo.sp_iqstatus') is not null) then      message '<<< FAILED to drop procedure dbo.sp_iqstatus >>>' type info to client ;   else      message '<<< DROPPED procedure dbo.sp_iqstatus >>>' type info to client ;   end if ;end if ;

create procedure dbo.sp_iqstatus() begin   declare @page_size        integer ;   declare @total_main_pages integer ;   declare @total_temp_pages integer ;   declare @total_log_pages  integer ;   declare @total_main_inuse bigint  ;   declare @total_temp_inuse bigint  ;   declare @total_log_inuse  bigint  ;   declare @total_main_avail bigint  ;   declare @total_temp_avail bigint  ;   declare @total_log_avail  bigint  ;   declare local temporary table _iqStatus   (      Name  varchar(128),      Value varchar(128) null  ) in system on commit preserve rows ;   set @page_size = property('PageSize') ;   set @total_main_pages = 0 ;   set @total_temp_pages = 0 ;   set @total_log_pages = (select DB_EXTENDED_PROPERTY('FileSize', 'translog')) ; for loop1 as cursor1 cursor for         select dbspace_id, dbspace_name from SYSDBSPACE   do      if dbspace_name = 'system' then         set @total_main_pages = @total_main_pages + (select DB_EXTENDED_PROPERTY('FileSize', dbspace_id)) ;      elseif dbspace_name = 'temporary' then         set @total_temp_pages = @total_temp_pages + (select DB_EXTENDED_PROPERTY('FileSize', dbspace_id)) ;      end if ;   end for ;   set @total_main_avail = 0 ;   set @total_temp_avail = 0 ;   set @total_log_avail  = 0 ;   for loop2 as cursor2 cursor for         select dbspace_name, total_space from sa_disk_free_space()   do      if dbspace_name = 'system' then         set @total_main_avail = @total_main_avail + total_space ;      elseif dbspace_name = 'temporary' then         set @total_temp_avail = @total_temp_avail + total_space ;      elseif dbspace_name = 'translog' then         set @total_log_avail = @total_log_avail + total_space ;      end if ;   end for ;   set @total_main_inuse = 0 ;   set @total_temp_inuse = 0 ;   set @total_log_inuse  = 0 ;   set @total_main_inuse = (@total_main_pages * @page_size) ;   set @total_temp_inuse = (@total_temp_pages * @page_size) ;   set @total_log_inuse  = (@total_log_pages  * @page_size) ;   insert into _iqStatus values ( ' Version:', (select @@version) ) ;   insert into _iqStatus values ( ' Main IQ Blocks Used:', ((@total_main_inuse + @total_log_inuse) / @page_size) || ' of ' || (@total_main_avail / @page_size) || ', ' || ((@total_main_inuse / @total_main_avail) * 100) || '%') ;   insert into _iqStatus values ( ' Page Size:', @page_size || '/' || @page_size || 'blksz/nbpp' ) ;  insert into _iqStatus values ( ' Other Versions:', '0 = 0Mb') ;   insert into _iqStatus values ( ' Last Backup Time:', (select max(last_time) from SYS.SYSHISTORY where operation = 'LAST_BACKUP')) ;         select * from _iqStatus ;end ;

commit ;

if (object_id('dbo.sp_iqstatus') is not null) then   message '<<< CREATED procedure dbo.sp_iqstatus >>>' type info to client ;   grant execute on dbo.sp_iqstatus to public ;else   message '<<< FAILED to create procedure dbo.sp_iqstatus >>>' type info to client ;end if ;